# History
HISTFILE=~/.histfile
HISTSIZE=100000
SAVEHIST=100000
setopt hist_expire_dups_first
setopt appendhistory

# Settings
setopt autocd nomatch
unsetopt beep extendedglob notify

# Completions
zstyle :compinstall filename '~/.zshrc'
autoload -Uz compinit
compinit
# Case-insensitive completions
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

# /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/:/usr/local/MacGPG2/bin:/Users/bsc21433/.zsh/scripts/:/usr/local/opt/fzf/bin

# Source my scripts (including fancy prompt!)
[[ "$PATH" != *"/.zsh/scripts/"* ]] && export PATH=$PATH:~/.zsh/scripts/

# Run the local environment shell if we have one (not in repo!)
[[ -f ~/.zsh/environment.sh ]] && source ~/.zsh/environment.sh

# Source the local scripts ran (in repo!)
. run-all-scripts-in-dir.sh ~/.zsh/environment

# Run the setEnv init.sh if available (not in repo!)
[ -f ~/.setEnv/init.sh ] && . ~/.setEnv/init.sh 2>/dev/null

# Colors in ls
export CLICOLOR=1

# Auto-suggesions
source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh
bindkey '^[[Z' autosuggest-accept # Shift-tab
bindkey "^[[3~" delete-char       # Turns the `fn+backspace` key back into delete.

zle -N select_branch
bindkey "^g" select_branch

# Syntax highlighting (must be at the end of .zshrc!)
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# Enable FZF
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Setup Docker for M1
export DOCKER_BUILDKIT=0
export COMPOSE_DOCKER_CLI_BUILD=0
export DOCKER_DEFAULT_PLATFORM=linux/amd64

# ## Benchmark prompt
# typeset -F SECONDS start
# precmd() {
#   start=$SECONDS
# }
# zle-line-init() {
#   PREDISPLAY="[$(( $SECONDS - $start ))] "
# }
# zle -N zle-line-init

# ###-tns-completion-start-### TNS is for NativeScript?
# if [ -f /Users/bjeaurn/.tnsrc ]; then
#     source /Users/bjeaurn/.tnsrc
# fi
# ###-tns-completion-end-###

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"                   # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion" # This loads nvm bash_completion

# Load Angular CLI autocompletion.
source <(ng completion script)

# Load Kubectl autcompletion
source <(kubectl completion zsh)

# pnpm
export PNPM_HOME="/Users/bjorn/Library/pnpm"
case ":$PATH:" in
*":$PNPM_HOME:"*) ;;
*) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# bun completions
[ -s "/Users/bjorn/.bun/_bun" ] && source "/Users/bjorn/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

eval export PATH="/Users/bjorn/.jenv/shims:${PATH}"
export JENV_SHELL=zsh
export JENV_LOADED=1
unset JAVA_HOME
unset JDK_HOME
source '/opt/homebrew/Cellar/jenv/0.5.6/libexec/libexec/../completions/jenv.zsh'
jenv rehash 2>/dev/null
jenv refresh-plugins

jenv() {
  type typeset &>/dev/null && typeset command
  command="$1"
  if [ "$#" -gt 0 ]; then
    shift
  fi

  case "$command" in
  enable-plugin | rehash | shell | shell-options)
    eval $(jenv "sh-$command" "$@")
    ;;
  *)
    command jenv "$command" "$@"
    ;;
  esac
}

export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"
